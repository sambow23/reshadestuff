diff --git "a/.\\MartysMods_RTGI.fx" "b/.\\rtgi_old.fx"
index 916f1e9..6f58e1f 100644
--- "a/.\\MartysMods_RTGI.fx"
+++ "b/.\\rtgi_old.fx"
@@ -63,14 +63,6 @@ uniform float RT_IL_AMOUNT <
     ui_category = "Diffuse RTGI";
 > = 10.0;
 
-uniform float RT_DIFFUSE_SATURATION <
-    ui_type = "drag";
-    ui_min = 0.0; ui_max = 2.0;
-    ui_label = "Diffuse Bounce Saturation";
-    ui_tooltip = "Controls the color saturation of diffuse light bounces. 1.0 is neutral, lower values desaturate, higher values increase saturation.";
-    ui_category = "Diffuse RTGI";
-> = 1.0;
-
 uniform float RT_Z_THICKNESS <
 	ui_type = "drag";
 	ui_min = 0.0; ui_max = 1.0;
@@ -284,12 +276,6 @@ struct RayDesc
 	Functions
 =============================================================================*/
 
-float3 adjust_saturation(float3 color, float saturation)
-{
-    float grey = dot(color, float3(0.2126, 0.7152, 0.0722));
-    return lerp(grey.xxx, color, saturation);
-}
-
 float2 pixel_idx_to_uv(uint2 pos, float2 texture_size)
 {
     float2 inv_texture_size = rcp(texture_size);
@@ -1025,10 +1011,7 @@ void TraceWrapDiffuseCS(in CSIN i)
     TraceContext ctx = _TraceContext(tpos, BUFFER_SCREEN_SIZE);
     float4 diff_sum = trace_diffuse(ctx);
 
-    // Apply saturation adjustment here
-    diff_sum.rgb = adjust_saturation(diff_sum.rgb, RT_DIFFUSE_SATURATION);
-
-    float4 tostore = float4(convert_gi_to_lighting(diff_sum, false), ctx.depth);
+    float4 tostore = float4(convert_gi_to_lighting(diff_sum,  false), ctx.depth);
     tex2Dstore(stRTGI_Aux0, i.dispatchthreadid.xy, tostore);
 }
 
@@ -1059,11 +1042,7 @@ void TraceWrapDiffusePS(in VSOUT i, out float4 o : SV_Target0)
     TraceContext ctx = _TraceContext(i.vpos.xy, BUFFER_SCREEN_SIZE);    
 
     float4 diff_sum = trace_diffuse(ctx);
-
-    // Apply saturation adjustment here
-    diff_sum.rgb = adjust_saturation(diff_sum.rgb, RT_DIFFUSE_SATURATION);
-
-    o = float4(convert_gi_to_lighting(diff_sum, false), ctx.depth);
+    o = float4(convert_gi_to_lighting(diff_sum,  false), ctx.depth);
 }
 
 #endif //_COMPUTE_SUPPORTED
@@ -1521,9 +1500,7 @@ void BlendNewPS(in VSOUT i, out float3 o : SV_Target0)
     float3 spec = tex2D(sRTGI_Aux3, i.uv).rgb;
   
     diff = decode_hdr_from_filter(diff);
-    spec = decode_hdr_from_filter(spec);
-
-    diff = adjust_saturation(diff, RT_DIFFUSE_SATURATION); 
+    spec = decode_hdr_from_filter(spec); 
 
     TraceContext ctx = _TraceContext(i.vpos.xy, BUFFER_SCREEN_SIZE);
     float alpha = get_alpha(ctx.pos);
